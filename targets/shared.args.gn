# Build a single static lib
is_component_build=false
v8_monolithic=true
v8_use_external_startup_data=false

# Uses the "hermetic" toolchain and libc++ by default; the required libs and includes will be bundled with the output
is_clang=true

# If using a custom LLVM toolchain (e.g. for cross compiling), add these as well
#custom_toolchain="//build/toolchain/linux/unbundle:default"
#host_toolchain="//build/toolchain/linux/unbundle:default"
#clang_use_chrome_plugins=false
#use_custom_libcxx_for_host=true

# Build in release mode
# DCHECK is normally disabled by is_official_build, but since we're not building Chrome, we use dcheck_always_on instead
dcheck_always_on=false
is_debug=false
is_official_build=false
strip_debug_info=true
symbol_level=0
v8_enable_debugging_features=false
v8_is_on_release_branch=true
v8_symbol_level=0

# Configure future/extra features
v8_enable_future=false
v8_enable_javascript_promise_hooks=false

# Significantly reduce memory usage in exchange for a 4GB cap on instance heaps (and negligible performance boost)
# Requires embedding code to define V8_COMPRESS_POINTERS
v8_enable_pointer_compression=true

# Minimize binary size by disabling Intl, WebAssembly, the sandbox, and debugging stuff
# For effects, see https://github.com/v8/v8/blob/main/src/flags/flag-definitions.h
icu_use_data_file=false
libcxx_natvis_include=false
v8_enable_fuzztest=false
v8_enable_gdbjit=false
v8_enable_i18n_support=false
v8_enable_maglev_graph_printer=false
v8_enable_sandbox=false
v8_enable_snapshot_compression=true
v8_enable_system_instrumentation=false
v8_enable_webassembly=false

